
编写配置文件
/data/tidbconf/pd.toml
[metric]
# prometheus client push interval, set "0s" to disable prometheus.
interval = "15s"
# prometheus pushgateway address, leaves it empty will disable prometheus.
address = "172.18.0.19:9091"
job="pd"

/data/tidbconf/tikv.toml
[metric]
# the Prometheus client push interval. Setting the value to 0s stops Prometheus client from pushing.
interval = "15s"
# the Prometheus pushgateway address. Leaving it empty stops Prometheus client from pushing.
address = "172.18.0.19:9091"
# the Prometheus client push job name. Note: A node id will automatically append, e.g., "tikv_1".
job = "tikv"


/data/tidbconf/tidb.toml
[status]
# If enable status report HTTP service.
report-status = true
# TiDB status port.
#status-port = 10080
# Prometheus pushgateway address, leaves it empty will disable prometheus push.
metrics-addr = "172.18.0.19:9091"
# Prometheus client push interval in second, set \"0\" to disable prometheus push.
metrics-interval = 15
job="tidb"

/data/prometheus/prometheus.yml
global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
alerting:
  alertmanagers:
  - static_configs:
    - targets: []
    scheme: http
    timeout: 10s
scrape_configs:
- job_name: prometheus
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  static_configs:
  - targets:
    - localhost:9090
- job_name: 'push-metrics'
  static_configs:
  - targets: ['172.18.0.19:9091']


docker run -d \
    --network host \
    --name pushgateway  \
    prom/pushgateway

安装pd
docker run -d \
    --name pd1   \
    --network host   \
    -v /etc/localtime:/etc/localtime:ro   \
    -v /data:/data   \
    pingcap/pd:v2.1.7   \
    --name="pd1"   \
    --data-dir="/data/pd1"   \
    --client-urls="http://0.0.0.0:12379"   \
    --advertise-client-urls="http://47.52.230.165:12379"   \
    --peer-urls="http://0.0.0.0:12380"   \
    --advertise-peer-urls="http://47.52.230.165:12380"   \
    --initial-cluster="pd1=http://47.52.230.165:12380,pd2=http://47.52.230.165:22380,pd3=http://47.52.230.165:32380" \
    --config="/data/conf/pd.toml"

docker run -d \
    --name pd2   \
    --network host   \
    -v /etc/localtime:/etc/localtime:ro   \
    -v /data:/data   \
    pingcap/pd:v2.1.7   \
    --name="pd2"   --data-dir="/data/pd2"   \
    --client-urls="http://0.0.0.0:22379"   \
    --advertise-client-urls="http://47.52.230.165:22379"   \
    --peer-urls="http://0.0.0.0:22380"   \
    --advertise-peer-urls="http://47.52.230.165:22380"   \
    --initial-cluster="pd1=http://47.52.230.165:12380,pd2=http://47.52.230.165:22380,pd3=http://47.52.230.165:32380" \
    --config="/data/conf/pd.toml"

docker run -d \
    --name pd3   \
    --network host   \
    -v /etc/localtime:/etc/localtime:ro   \
    -v /data:/data   \
    pingcap/pd:v2.1.7   \
    --name="pd3"   \
    --data-dir="/data/pd3"   \
    --client-urls="http://0.0.0.0:32379"   \
    --advertise-client-urls="http://47.52.230.165:32379"   \
    --peer-urls="http://0.0.0.0:32380"   \
    --advertise-peer-urls="http://47.52.230.165:32380"   \
    --initial-cluster="pd1=http://47.52.230.165:12380,pd2=http://47.52.230.165:22380,pd3=http://47.52.230.165:32380" \
    --config="/data/conf/pd.toml"


安装tikv
docker run -d \
    --name tikv1   \
    --network host   \
    --ulimit nofile=1000000:1000000   \
    -v /etc/localtime:/etc/localtime:ro   \
    -v /data:/data   pingcap/tikv:v2.1.7   \
    --addr="0.0.0.0:20161"   \
    --advertise-addr="47.52.230.165:20161"   \
    --data-dir="/data/tikv1"   \
    --pd="47.52.230.165:12379,47.52.230.165:22379,47.52.230.165:32379" \
    --config="/data/conf/tikv.toml"

docker run -d \
    --name tikv2  \
    --network host   \
    --ulimit nofile=1000000:1000000   \
    -v /etc/localtime:/etc/localtime:ro   \
    -v /data:/data   pingcap/tikv:v2.1.7   \
    --addr="0.0.0.0:20162"   \
    --advertise-addr="47.52.230.165:20162"   \
    --data-dir="/data/tikv2"   \
    --pd="47.52.230.165:12379,47.52.230.165:22379,47.52.230.165:32379" \
    --config="/data/conf/tikv.toml"

docker run -d \
    --name tikv3  \
    --network host   \
    --ulimit nofile=1000000:1000000   \
    -v /etc/localtime:/etc/localtime:ro   \
    -v /data:/data   \
    pingcap/tikv:v2.1.7   \
    --addr="0.0.0.0:20163"   \
    --advertise-addr="47.52.230.165:20163"   \
    --data-dir="/data/tikv3"   \
    --pd="47.52.230.165:12379,47.52.230.165:22379,47.52.230.165:32379" \
    --config="/data/conf/tikv.toml"

安装tidb
docker run -d \
    --name tidb   \
    --network host   \
    -v /etc/localtime:/etc/localtime:ro  \
    -v /data:/data  pingcap/tidb:v2.1.7   \
    --store=tikv   \
    --path="47.52.230.165:12379,47.52.230.165:22379,47.52.230.165:32379" \
    --config="/data/conf/tidb.toml"

安装prometheus
docker run -d \
    --network host \
    --privileged \
    -v /data/conf/prometheus.yml:/etc/prometheus/prometheus.yml:ro \
    --name prometheus \
    quay.io/prometheus/prometheus

安装grafana
docker run -d \
    --network host \
    --name grafana \
    grafana/grafana

登陆grafana 添加数据源 导入模板 