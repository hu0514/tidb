---
- name: Ansible Install New Pd Cluster Or Rolling Update Pd Cluster
  hosts: 47.52.230.165
  remote_user: root
  vars:
    pd_name: "pd{{groups['pd'].index(inventory_hostname)+1}}"
    pd_addr: "{{ansible_host}}:12379"
    pd_version: "v2.1.7"
  serial: 1
  any_errors_fatal: true
  tasks:
  - name: print host name
    tags:
     - always
    debug:
     msg: "{{ ansible_nodename }}"

  - name: install epel-release
    tags:
     - always
    yum:
     name:
      - python-pip
      - glances
      - jq
     state: present

  - name: install docker-py
    tags:
     - always
    pip:
     name: docker-py

  - name: get docker-ce.repo
    tags:
     - always
    get_url: 
     url: https://download.docker.com/linux/centos/docker-ce.repo 
     dest: /etc/yum.repos.d/docker-ce.repo

  - name: install docker
    tags:
     - always
    yum:
     name: "{{item}}"
     state: present
     update_cache: yes
    with_items:
     - yum-utils
     - device-mapper-persistent-data
     - lvm2
     - containerd.io
     - docker-ce-cli
     - docker-ce

  - name: start docker service
    tags:
     - always
    service:
     name: docker
     state: started

  - name: pull PD image
    tags:
     - always
    docker_image:
     name: "pingcap/pd:{{pd_version}}"
     
  - name: get PD leader info
    tags:
     - rolling
    uri:
     url: "http://{{ansible_host}}:12379/pd/api/v1/leader"
     method: GET
     status_code: 200
    register: pd_leader_info
    #ignore_errors: yes
  
  - name: set_fact pd_leader
    tags:
     - rolling
    set_fact:
     pd_leader: "{{pd_leader_info.json.name}}"

  - name: print leader info
    tags:
     - rolling
    debug:
     msg: "{{pd_leader}}"

  - name: print pd_name info
    tags:
     - rolling
    debug:
     msg: "{{pd_name}}"

  - name: transfer leader
    tags:
     - rolling
    uri:
     url: "http://{{ansible_host}}:12379/pd/api/v1/leader/resign"
     method: POST
     status_code: 200
    when:
     - pd_leader == pd_name

  - name: stop PD container
    tags:
     - rolling
    docker_container:
     name: pd1
     state: stopped

  - name: wait for PD down
    tags:
     - rolling
    wait_for:
     host: "{{ansible_host}}"
     port: 12379
     state: stopped
     msg: PD cannot shutdown

  - name: remove PD contaier
    tags:
     - rolling
    docker_container:
     name: pd1
     state: absent

  - name: start PD container
    tags:
     - always
    docker_container:
     image: "pingcap/pd:{{pd_version}}"
     name: "{{pd_name}}"
     network_mode: host
     volumes:
      - /etc/localtime:/etc/localtime:ro
      - /data:/data
     command: --name="pd1"
              --data-dir="/data/pd1"
              --client-urls="http://0.0.0.0:12379"
              --advertise-client-urls="http://47.52.230.165:12379"
              --peer-urls="http://0.0.0.0:12380"
              --advertise-peer-urls="http://47.52.230.165:12380"
              --initial-cluster="{% set pd_all=[] %}{% for cluster_host in groups['pd'] %}{% set cluster_ip=hostvars[cluster_host].inventory_hostname %}{% set cluster_number=groups['pd'].index(inventory_hostname)+1%}{% set cluster_port=2380 %}{% set _=pd_all.append('pd%s=http://%s:%s'%(cluster_number,cluster_ip,cluster_port)) %}{% endfor %}{{pd_all|join(',')}}"
              --config="/data/conf/pd.toml"

  - name: wait for PD up
    tags:
     - always
    wait_for:
     host: "{{ansible_host}}"
     port: 12379
     state: started
     msg: PD start failure
      

